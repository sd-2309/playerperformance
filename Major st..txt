import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import altair as alt


# Load data for all players
rohit_ground = pd.read_excel("rohit_ground.xlsx")
rohit_opp = pd.read_excel("rohit_opp.xlsx")
rohit_stats = pd.read_excel("rohit_stats.xlsx")
surya_ground = pd.read_excel("sky_ground.xlsx")
surya_opp = pd.read_excel("sky_opp.xlsx")
surya_stats = pd.read_excel("sky_stats.xlsx")
gill_ground = pd.read_excel("gill_ground.xlsx")
gill_opp = pd.read_excel("gill_opp.xlsx")
gill_stats = pd.read_excel("gill_stats.xlsx")
hardik_ground = pd.read_excel("hardik_ground.xlsx")
hardik_opp = pd.read_excel("hardik_opp.xlsx")
hardik_stats = pd.read_excel("hardik_stats.xlsx")
jaddu_ground = pd.read_excel("jaddu_ground.xlsx")
jaddu_opp = pd.read_excel("jaddu_opp.xlsx")
jaddu_stats = pd.read_excel("jaddu_stats.xlsx")
rahul_ground = pd.read_excel("rahul_ground.xlsx")
rahul_opp = pd.read_excel("rahul_opp.xlsx")
rahul_stats = pd.read_excel("rahul_stats.xlsx")
dhawan_ground = pd.read_excel("dhawan_ground.xlsx")
dhawan_opp = pd.read_excel("dhawan_opp.xlsx")
dhawan_stats = pd.read_excel("dhawan_stats.xlsx")
kohli_ground = pd.read_excel("kohli_ground.xlsx")
kohli_opp = pd.read_excel("kohli_opp.xlsx")
kohli_stats = pd.read_excel("kohli_stats.xlsx")

# Dictionary to store player data
player_data = {
    "Rohit Sharma": {"ground": rohit_ground, "opp": rohit_opp, "stats": rohit_stats},
    "Surya Kumar Yadav": {"ground": surya_ground, "opp": surya_opp, "stats": surya_stats},
    "Shubman Gill": {"ground": gill_ground, "opp": gill_opp, "stats": gill_stats},
    "Hardik Pandya": {"ground": hardik_ground, "opp": hardik_opp, "stats": hardik_stats},
    "Ravindra Jadeja": {"ground": jaddu_ground, "opp": jaddu_opp, "stats": jaddu_stats},
    "KL Rahul": {"ground": rahul_ground, "opp": rahul_opp, "stats": rahul_stats},
    "Shikhar Dhawan": {"ground": dhawan_ground, "opp": dhawan_opp, "stats": dhawan_stats},
    "Virat Kohli": {"ground": kohli_ground, "opp": kohli_opp, "stats": kohli_stats},
}


# Set page layout
st.set_page_config(layout="wide")

# Display "PLAYER STATISTICS" heading
st.write("# PLAYER STATISTICS")

# Display player selection dropdown
selected_player = st.selectbox("Select a player:", list(player_data.keys()))

# Arrange dropdowns horizontally
col1, col2, col3 = st.columns(3)
# Display options to choose ground stats and opposition
stats_option = col3.selectbox("Stats:", ["None", "Stats"])
ground_option = col1.selectbox("Ground Stats:", ["None", "All Grounds", "Specific Ground"])
opp_option = col2.selectbox("Opposition Stats:", ["None", "All Oppositions", "Specific Opposition"])

# Display data based on user's selection
if stats_option == "Stats":
    st.write("Player Stats for " + selected_player)
    st.write(player_data[selected_player]["stats"])
    # Add a "Show Last" button to display the last n rows
    n = st.selectbox("Show last", [5, 10, 15, 20])
    if st.button("Show Last"):
        st.write(player_data[selected_player]["stats"].tail(n))
    # Create a bar chart for Player stats along with innings
    chart_data = player_data[selected_player]["stats"]
    chart = alt.Chart(chart_data).mark_bar().encode(
        x='Innings',
        y='Runs',
        tooltip=['Innings', 'Runs']  
    )
    st.altair_chart(chart, use_container_width=True)

if ground_option == "All Grounds":
    # Display all ground stats for the selected player
    st.write("Ground Stats for " + selected_player)
    st.write(player_data[selected_player]["ground"])
    # Create a bar chart for Ground stats
    chart_data = player_data[selected_player]["ground"]
    chart = alt.Chart(chart_data).mark_bar().encode(
        x='Ground',
        y='Runs',
        tooltip=['Ground', 'Runs', 'Innings', 'average']
    )
    # Add total runs to the top of each bar
    text = chart.mark_text(
        align='center',
        baseline='bottom',
        dy=-5
    ).encode(
        text='Runs:Q'
    )
    st.altair_chart(chart + text, use_container_width=True)
    

elif ground_option == "Specific Ground":
    specific_ground = st.text_input("Enter a specific ground:")
    if specific_ground:
        # Filter and display specific ground stats for the selected player
        filtered_ground_stats = player_data[selected_player]["ground"][
            player_data[selected_player]["ground"]["Ground"].str.contains(specific_ground, case=False)
        ]
        st.write("Ground Stats for " + selected_player + " at " + specific_ground)
        st.write(filtered_ground_stats)
        

if opp_option == "All Oppositions":
    # Display all opposition stats for the selected player
    st.write("Opposition Stats for " + selected_player)
    st.write(player_data[selected_player]["opp"])
    # Create a bar chart for Opposition stats
    chart_data = player_data[selected_player]["opp"]
    chart = alt.Chart(chart_data).mark_bar().encode(
        x='Opposition',
        y='Runs',
        tooltip=['Opposition', 'Runs','Innings', 'average']
    )
    # Add total runs to the top of each bar
    text = chart.mark_text(
        align='center',
        baseline='bottom',
        dy=-5
    ).encode(
        text='Runs:Q'
    )
    st.altair_chart(chart + text, use_container_width=True)
    
elif opp_option == "Specific Opposition":
    specific_Opposition = st.text_input("Enter a specific Opposition:")
    if specific_Opposition:
        # Filter and display specific opposition stats for the selected player
        filtered_opp_stats = player_data[selected_player]["opp"][
            player_data[selected_player]["opp"]["Opposition"].str.contains(specific_Opposition, case=False)
        ]
        st.write("Opposition Stats for " + selected_player + " VS " + specific_Opposition)
        st.write(filtered_opp_stats)
